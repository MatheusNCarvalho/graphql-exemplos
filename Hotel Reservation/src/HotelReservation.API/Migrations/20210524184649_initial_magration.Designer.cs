// <auto-generated />
using System;
using HotelReservation.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HotelReservation.API.Migrations
{
    [DbContext(typeof(MyHotelDbContext))]
    [Migration("20210524184649_initial_magration")]
    partial class initial_magration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HotelReservation.API.Model.Guest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Guests");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Alper Ebicoglu",
                            RegisterDate = new DateTime(2021, 5, 14, 15, 46, 48, 223, DateTimeKind.Local).AddTicks(6125)
                        },
                        new
                        {
                            Id = 2L,
                            Name = "George Michael",
                            RegisterDate = new DateTime(2021, 5, 19, 15, 46, 48, 229, DateTimeKind.Local).AddTicks(6789)
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Daft Punk",
                            RegisterDate = new DateTime(2021, 5, 23, 15, 46, 48, 229, DateTimeKind.Local).AddTicks(6995)
                        });
                });

            modelBuilder.Entity("HotelReservation.API.Model.Reservation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckinDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckoutDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("GuestId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoomId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GuestId");

                    b.HasIndex("RoomId");

                    b.ToTable("Reservation");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CheckinDate = new DateTime(2021, 5, 22, 15, 46, 48, 409, DateTimeKind.Local).AddTicks(3992),
                            CheckoutDate = new DateTime(2021, 5, 27, 15, 46, 48, 409, DateTimeKind.Local).AddTicks(4023),
                            GuestId = 1L,
                            RoomId = 3L
                        },
                        new
                        {
                            Id = 2L,
                            CheckinDate = new DateTime(2021, 5, 23, 15, 46, 48, 409, DateTimeKind.Local).AddTicks(9940),
                            CheckoutDate = new DateTime(2021, 5, 28, 15, 46, 48, 409, DateTimeKind.Local).AddTicks(9951),
                            GuestId = 2L,
                            RoomId = 4L
                        });
                });

            modelBuilder.Entity("HotelReservation.API.Model.Room", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AllowedSmoking")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AllowedSmoking = false,
                            Name = "yellow-room",
                            Number = 101,
                            Status = 2
                        },
                        new
                        {
                            Id = 2L,
                            AllowedSmoking = false,
                            Name = "blue-room",
                            Number = 102,
                            Status = 2
                        },
                        new
                        {
                            Id = 3L,
                            AllowedSmoking = false,
                            Name = "white-room",
                            Number = 103,
                            Status = 1
                        },
                        new
                        {
                            Id = 4L,
                            AllowedSmoking = false,
                            Name = "black-room",
                            Number = 104,
                            Status = 1
                        });
                });

            modelBuilder.Entity("HotelReservation.API.Model.Reservation", b =>
                {
                    b.HasOne("HotelReservation.API.Model.Guest", "Guest")
                        .WithMany()
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelReservation.API.Model.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");

                    b.Navigation("Room");
                });
#pragma warning restore 612, 618
        }
    }
}
